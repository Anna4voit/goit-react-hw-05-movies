{"version":3,"file":"static/js/727.46b1c4be.chunk.js","mappings":"6JAkBA,IAhBe,WACb,OACEA,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CACHC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIjB,C,+ECfA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAA0F,6B,SCe1F,EAbmB,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAOI,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OACtClB,EAAAA,EAAAA,KAAA,MAAImB,UAAWC,EAAcnB,UAC3BD,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACF,UAAWC,EAAUE,GAAE,UAAAC,OAAYN,GAAMO,MAAO,CAAEC,KAAMb,GAAWX,SACtEiB,KAF8BD,EAI9B,IAGP,OAAOjB,EAAAA,EAAAA,KAAA,MAAImB,UAAWC,EAASnB,SAAEa,GACnC,C,yHCbA,EAAyB,4BAAzB,EAA6D,2BAA7D,EAA+F,0B,SCqC/F,EAlCoB,SAAHJ,GAAsB,IAAhBgB,EAAQhB,EAARgB,SACrBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAWtB,OACEI,EAAAA,EAAAA,MAAA,QAAMd,UAAWC,EAAUM,SANR,SAAAQ,GACnBA,EAAMC,iBACNT,EAASK,GACTC,EAAS,GACX,EAEoD/B,SAAA,EAChDD,EAAAA,EAAAA,KAAA,SACEmB,UAAWC,EACXgB,SAbe,SAAAF,GACnBF,EAASE,EAAMG,cAAcC,MAAMC,OAAOC,cAC5C,EAYMC,KAAK,OACLC,KAAK,QACLJ,MAAOP,EACPY,WAAS,EACTC,YAAY,kBAEd5C,EAAAA,EAAAA,KAAA,UAAQmB,UAAWC,EAAYqB,KAAK,SAAQxC,SAAC,aAKnD,E,UCyBA,EAlDe,WAAO,IAAD4C,EACnBlB,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCmB,EAAOjB,EAAA,GAAEkB,EAAUlB,EAAA,GAC1BmB,GAA4BpB,EAAAA,EAAAA,UAAS,IAAGqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAAjCrC,EAAMsC,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAA0BvB,EAAAA,EAAAA,UAAS,MAAKwB,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgC3B,EAAAA,EAAAA,WAAS,GAAM4B,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAA/B,EAAAA,EAAAA,GAAA6B,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9B9B,EAAiC,QAA5Bc,EAAGiB,EAAaE,IAAI,gBAAQ,IAAAnB,EAAAA,EAAI,IAE3CoB,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVlC,EAAJ,CAkBIA,IAbFgB,GAAW,IACXmB,EAAAA,EAAAA,IAAiBnC,GACdoC,MAAK,SAAAC,GACJlB,EAAUkB,GACVV,EAA6B,IAAjBU,EAAMC,OACpB,IACCC,OAAM,SAAAjB,GACLC,EAASD,EAAMkB,QACjB,IACCC,SAAQ,WACPzB,GAAW,EACb,IAdJ,CAmBF,GAAG,CAAChB,IAMJ,OACEE,EAAAA,EAAAA,MAAA,OAAAhC,SAAA,EACED,EAAAA,EAAAA,KAACyE,EAAW,CAAC/C,SANI,SAAAY,GACnByB,EAAgB,CAAEhC,MAAOO,GAC3B,IAKKe,IAASrD,EAAAA,EAAAA,KAAA,KAAAC,SAAIoD,IACbP,IAAW9C,EAAAA,EAAAA,KAAC0E,EAAAA,EAAM,IAClBjB,IACCzD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,6DAELD,EAAAA,EAAAA,KAAC2E,EAAAA,EAAU,CAAChE,OAAQA,MAG1B,C,2MCrDAiE,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAa,eAAApE,GAAAqE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACJT,IAAAA,IAAU,8BAADrD,OAA+BsD,IAAW,KAAD,EAA3D,OAARK,EAAQC,EAAAG,KAAAH,EAAAI,OAAA,SACPL,EAASM,KAAKC,SAAO,wBAAAN,EAAAO,OAAA,GAAAT,EAAA,KAC7B,kBAHyB,OAAAvE,EAAAiF,MAAA,KAAAC,UAAA,KAMbC,EAAiB,eAAA7E,GAAA+D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAc,EAAMC,GAAO,IAAAb,EAAA,OAAAF,IAAAA,MAAA,SAAAgB,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACrBT,IAAAA,IAAU,SAADrD,OACrBwE,EAAO,aAAAxE,OAAYsD,EAAO,oBACnC,KAAD,EAFa,OAARK,EAAQc,EAAAV,KAAAU,EAAAT,OAAA,SAGPL,EAASM,MAAI,wBAAAQ,EAAAN,OAAA,GAAAI,EAAA,KACrB,gBAL6BG,GAAA,OAAAjF,EAAA2E,MAAA,KAAAC,UAAA,KAOjBM,EAAY,eAAAC,GAAApB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoB,EAAML,GAAO,IAAAb,EAAA,OAAAF,IAAAA,MAAA,SAAAqB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EAChBT,IAAAA,IAAU,SAADrD,OACrBwE,EAAO,qBAAAxE,OAAoBsD,EAAO,2BAC3C,KAAD,EAFa,OAARK,EAAQmB,EAAAf,KAAAe,EAAAd,OAAA,SAGPL,EAASM,KAAKC,SAAO,wBAAAY,EAAAX,OAAA,GAAAU,EAAA,KAC7B,gBALwBE,GAAA,OAAAH,EAAAR,MAAA,KAAAC,UAAA,KAOZW,EAAS,eAAAC,GAAAzB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyB,EAAMV,GAAO,IAAAb,EAAA,OAAAF,IAAAA,MAAA,SAAA0B,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EACbT,IAAAA,IAAU,SAADrD,OACrBwE,EAAO,qBAAAxE,OAAoBsD,EAAO,oBAC3C,KAAD,EAFa,OAARK,EAAQwB,EAAApB,KAAAoB,EAAAnB,OAAA,SAGPL,EAASM,KAAKmB,MAAI,wBAAAD,EAAAhB,OAAA,GAAAe,EAAA,KAC1B,gBALqBG,GAAA,OAAAJ,EAAAb,MAAA,KAAAC,UAAA,KAOT1B,EAAgB,eAAA2C,GAAA9B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA8B,EAAMC,GAAO,IAAA7B,EAAA,OAAAF,IAAAA,MAAA,SAAAgC,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA3B,KAAA,EACpBT,IAAAA,IAAU,wBAADrD,OACNsD,EAAO,qDAAAtD,OAAoDwF,IACnF,KAAD,EAFa,OAAR7B,EAAQ8B,EAAA1B,KAAA0B,EAAAzB,OAAA,SAGPL,EAASM,KAAKC,SAAO,wBAAAuB,EAAAtB,OAAA,GAAAoB,EAAA,KAC7B,gBAL4BG,GAAA,OAAAJ,EAAAlB,MAAA,KAAAC,UAAA,I","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesList/movieList.module.css?257a","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchMovie/SearchMovie.module.css?c852","components/SearchMovie/SearchMovie.jsx","pages/Movies/Movies.jsx","service/api.js"],"sourcesContent":["import { Bars } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        color=\"#281cc9\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movieList_list__JUGzg\",\"link\":\"movieList_link__t1-rf\",\"list_item\":\"movieList_list_item__T9-zC\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './movieList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const elements = movies.map(({ id, title }) => (\n    <li className={css.list_item} key={id}>\n      <Link className={css.link} to={`/movie/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return <ul className={css.list}>{elements}</ul>;\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"SearchMovie_button__-yGEO\",\"input\":\"SearchMovie_input__3IbmL\",\"form\":\"SearchMovie_form__wxS1-\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './SearchMovie.module.css';\n\nconst SearchMovie = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.currentTarget.value.trim().toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.input}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"query\"\n        value={query}\n        autoFocus\n        placeholder=\"Search movie\"\n      ></input>\n      <button className={css.button} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchMovie.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchMovie;\n","import React, { useEffect, useState } from 'react';\nimport { fetchSearchMovie } from 'service/api';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchMovie from 'components/SearchMovie/SearchMovie';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [noMovies, setNoMovies] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    const fetchMovieSearch = () => {\n      setLoading(true);\n      fetchSearchMovie(query)\n        .then(films => {\n          setMovies(films);\n          setNoMovies(films.length === 0);\n        })\n        .catch(error => {\n          setError(error.message);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    if (query) {\n      fetchMovieSearch();\n    }\n  }, [query]);\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <div>\n      <SearchMovie onSubmit={handleSubmit} />\n      {error && <p>{error}</p>}\n      {loading && <Loader />}\n      {noMovies && (\n        <p>There is no movies with this request. Please, try again</p>\n      )}\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '35acd53189075d17d4b9d3ba1aca524c';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n// `movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchSearchMovie = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n"],"names":["_jsx","children","Bars","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","_ref","movies","location","useLocation","elements","map","_ref2","id","title","className","css","Link","to","concat","state","from","onSubmit","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","event","preventDefault","onChange","currentTarget","value","trim","toLowerCase","type","name","autoFocus","placeholder","_searchParams$get","loading","setLoading","_useState3","_useState4","setMovies","_useState5","_useState6","error","setError","_useState7","_useState8","noMovies","setNoMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","fetchSearchMovie","then","films","length","catch","message","finally","SearchMovie","Loader","MoviesList","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieDetails","_callee2","movieId","_context2","_x","fetchReviews","_ref3","_callee3","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","_ref5","_callee5","keyword","_context5","_x4"],"sourceRoot":""}